package main

// 题：盛最多水的容器
// 	给 n 个非负整数 a1，a2，...，an，每个数代表坐标中的一个点 (i, ai)，在坐标内画 n 条垂直线，垂直线 i 的两个端点分别为(i,ai) 和 (i, 0) 。
//	找出其中的两条线，使得它们与x轴共同构成的容器可以容纳最多的水。
/**
双指针法：设两指针i和j，指向的数字分别为h[i]和h[j]；假设h[i]<=h[j]，即i对应的数为短板。容器的容器=短板 * i和j的距离。
- 短板向内移动，min(h[i],h[j])可能变大，因此下个水槽面积可能变大；
- 长板向内移动，min(h[i],h[j])变小或相等，下个水槽面积一定变小。

证明：
如果
 */

// 提示:
// 	n == height.length
// 	2 <= n <= 10^5; 0 <= height[i] <= 10^4
func main() {
	// [1,8,6,2,5,4,8,3,7] => 49
	// [1,1] => 1，不包含y轴
	// [4,3,2,1,4] => 16
	// [1,2,1] => 2
}